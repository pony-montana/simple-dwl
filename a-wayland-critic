A wayland critic by ponymontana


I explored the wayland ecosystem trying to build a minimal desktop environment, similar to what I could have on X with suckless software + unix-style utilities. What I found messing up with wayland-based-softwares is something that I didn't expect and that noone had tell to me. Nor the wayland entusiasts, nor the wayland haters.


THE ECOSYSTEM

There is like one decent piece of software for (pretty) every macroscopic thing you will need:

- one good reference library to base your desktop on (wlroots).
- one good window manager / compositor (sway).
- one good terminal (foot).
- a bunch of utilities, mainly programs developed under the "sway umbrella", with few exceptions.
- some noticeble missings like no way to do color-correction and little things that you encounter diving in.

There are some things that people appreciate but is not what I define good/decent software. Honorable mention to hyprland and dwl, and for alacritty and kitty terminals. KDE an Gnome respectively developing their wayland compositor are trying to make the experience of their users even more miserable if it's possible, and it seems they are doing a great job.
So as today, if someone says it uses a wayland desktop that isn't a piece of garbage you could be sure of the setup he is using, with few little doubt.

"wayland ecosystem" is just "one decent implementation" (with noticeble missings).
It lacks the redundancy, the versatility, the florid ecosistem that is GROWTH upon X11 over the years. After more that 10 years, wayland protocol today has just one decent "reference implementation".

But what about all the software listed here (https://github.com/natpen/awesome-wayland)? Why dwl, a clone of a very good piece of software is not a "decent program to use on wayland"?


WAYLAND IS LITERALLY THE PAST

If you talked me about Wayland some years ago, I would rejected it. By my way of observing things, it seemed to have all the characteristics to be a complete mess: a bunch of tech-theoretics decide that what is working today is bad and we need to elaborate a way to restart from scratch; another way to do the same things that hipotetically would, in the end, be better.
I know a lot of story that comes from this incipit and goes directly to the never-delivered end.
In general the euristic I elaborated is: if something claims to be "the future" it needs to become also "the present" at some point to be taken seriously. In this way I distinguish between sci-fi and reality.

Wayland has been "the future" for at least 10 years (they are technically more...), without being "the present".
In general 10 years are more that enough to spot bullshits.

How much have you heard about Pipewire being so good and how much time is passed until you put it on your machine?
They are not the same thing and the comparison is not equal; however, this counter-example is just here describe how non bullshit things happens and from "the future" things become "the present".
Wayland risk to become "the past", entering in the realm of the "never-realized-future".

But today things seems different. You hear wayland news from all around, some new project start to deliver good functionality based on it (like waydroid).
Today seems that something is moved on, and that this story of reinventing the wheel could have a good end. Today we seems near inventing a better wheel.
Like the wheel, but better. And is incredibly near us, it needs just the last fixes to become "the present".. .


FIRST THE EGG OR THE CHICKEN?

Wayland is a protocol. A protocol is a bunch text that describe how to do things, setting rules and specifications that then are (hopefully) implemented in softwares.
In general, there are two major ways a protocol can be developed and enstablished:
- Basing it on at least one working implementation or
- basing it on theoretics and implementing then.

In the first case the work of theoretics is minimized; there is something that works in real world and the protocol enstablish in large part by itself.
Are industry leader, hackers, people who are focus on making real things working togheter that define silently the standard.
The good thing is that this method is bullet-shit-proof; is diffciult to missing completely the point when you build on something that works.
The bad thing is that it could be sub-optimal and inefficient (more than what we expect from a protocol) because decision are not taken by professional thinkerers.

Wayland falls in the second case. First the design, the the implementation.
In general, is common for protocol that start by defining the eventual design of things to never be adopted.
Even if, sometimes, they are good protocols, theoretically better than what works in the real world.


WERE WHE ARE TODAY

I say that I didn't expect that wayland ecosistem was in this state. In what sense?

Today, late 2023, I update my terminal that enables the new fractional-scaling-protocol (it permit to scale the dpi on your monitor by "0.8" for example).
Wlroots also support that new protocol. But dwl, the dwm clone I use doesnt support it. Weird artifact on my screen here we go.
In general under wayland there are a lot of protocols that defines how things need to be implemented for all the basic things.The problem, as today, is that it is an higly unstable protocol:
things changes from day to night, even on basic things. And if you want a smooth experience you need to choice only highly developed software that are ready to implementing the new specifications.
Exact, the softwares that do that are what I described first as the only decent softwares.


OBSOLESCENCE

Wayland softwares that wasn't updated in the last one or two years are now obsolete.
To complain with new standards you need to rewrite how they operate, and a software that need to continuosly been rewritten can't be minimal, can't be secure and can't be good; and mantaining it become is pain.
The case of dwl, the dwm clone, is iconic.
I want to update my window manager when I want and when I feel I need something different. The ultimate goal of suckless dwm is to be stable; is a software that do something for you and try to not harm you.
The status of wayland defect the ultimate purpouse of a software like that, and even if dwl is "well written 2k sloc in c" it is not minimal and it is harmful for the users.

In general, the actual status of wayland protocol is why it can't have all the variety of software that X11 has.
And why you can't, today, build a minimal wayland desktop, even if on of the purpouse of wayland is "to be minimal".


IN THE END

This is exactly what I didn't expect when I start diving into wayland. I expected less software choices than X, more immature softwares,  but didn't expect to find a so unstable and immature protocol.

Wayland in 2023 is still "the future", and I don't know if it is on his road to become "the present" or "the past".
What I know is that, if I will be alive, I will retry to explore the ecosystem in 5 year from now.
And I really don't know if I will find more decent alternative softwares than today, or less, because of the obsolescence.
